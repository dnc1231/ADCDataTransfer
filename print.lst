


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000 FFFFFFFC 
                       Counter EQU              -4
   12 00000000 FFFFFFFC 
                       NumTen  EQU              -4
   13 00000000                 IMPORT           writedata
   14 00000000                 IMPORT           writecommand
   15 00000000                 IMPORT           ST7735_OutChar
   16 00000000                 IMPORT           ST7735_OutString
   17 00000000                 EXPORT           LCD_OutDec
   18 00000000                 EXPORT           LCD_OutFix
   19 00000000                 PRESERVE8
   20 00000000         
   21 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   22 00000000                 THUMB
   23 00000000         
   24 00000000         
   25 00000000         
   26 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   27 00000000         ; Output a 32-bit number in unsigned decimal format
   28 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   29 00000000         ; Output: none
   30 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   31 00000000         LCD_OutDec
   32 00000000 F84D BD04       PUSH             {R11}
   33 00000004 46EB            MOV              R11, SP
   34 00000006 B081            ADD              SP, #Counter
   35 00000008         
   36 00000008         
   37 00000008 E92D 0FF0       PUSH             {R4-R11}
   38 0000000C 4606            MOV              R6, R0
   39 0000000E F04F 070A       MOV              R7, #10
   40 00000012         
   41 00000012 F04F 0A00       MOV              R10, #0     ;COUNTER 
   42 00000016 4631            MOV              R1, R6      ; R1 HAS INPUT
   43 00000018 FBB1 F1F7 
                       loopD1  UDIV             R1, R1, R7  ; DIVIDE INPUT/10
   44 0000001C 2900            CMP              R1, #0      ;CHECK IF 0
   45 0000001E F10A 0A01       ADD              R10, #1     ;ADD 1 TO COUNTER
   46 00000022 D1F9            BNE              loopD1      ; IF NOT 0 LOOP BAC
                                                            K
   47 00000024 F84B AC04       STR              R10, [R11,#Counter] ;
   48 00000028 F1BA 0A01       SUBS             R10, #1     ;SUB COUNTER



ARM Macro Assembler    Page 2 


   49 0000002C D109            BNE              loopD4
   50 0000002E F100 0030       ADD              R0, #0x30   ;MAKING IT A CHARAC
                                                            TER
   51 00000032 B50E            PUSH             {LR,R1-R3}
   52 00000034 F7FF FFFE       BL               ST7735_OutChar 
                                                            ;OUTPUT CHARACTER
   53 00000038 E8BD 400E       POP              {LR,R1-R3}
   54 0000003C E8BD 0FF0       POP              {R4-R11}
   55 00000040 4770            BX               LR
   56 00000042         
   57 00000042 463A    loopD4  MOV              R2, R7      ;PUT 10 IN R2
   58 00000044 F1BA 0A01 
                       loopD2  SUBS             R10, #1     ;SUB 1 FROM COUNTER
                                                            
   59 00000048 D002            BEQ              loopD3      ;GO TO D3, IF SUB 1
                                                             =0
   60 0000004A FB02 F207       MUL              R2,R7       ; MULTIPLY 10*R2
   61 0000004E E7F9            B                loopD2      ;TRYING TO GET COUN
                                                            TER TO 0
   62 00000050 FBB6 F4F2 
                       loopD3  UDIV             R4, R6, R2  ;INPUT/R2(10.....)
   63 00000054 FB04 F502       MUL              R5, R4, R2  ; 
   64 00000058 EBA6 0505       SUB              R5, R6, R5  ; INPUT-R5
   65 0000005C 4620            MOV              R0, R4      ;
   66 0000005E F100 0030       ADD              R0, #0x30   ;MAKING IT A CHARAC
                                                            TER
   67 00000062 B50E            PUSH             {LR,R1-R3}
   68 00000064 F7FF FFFE       BL               ST7735_OutChar 
                                                            ;OUTPUT CHARACTER
   69 00000068 E8BD 400E       POP              {LR,R1-R3}
   70 0000006C 462E            MOV              R6, R5
   71 0000006E FBB2 F2F7       UDIV             R2, R7
   72 00000072 2A00            CMP              R2, #0
   73 00000074 D1EC            BNE              loopD3
   74 00000076 E8BD 0FF0       POP              {R4-R11}
   75 0000007A         
   76 0000007A 46DD            MOV              SP,R11
   77 0000007C F85D BB04       POP              {R11}
   78 00000080         
   79 00000080         
   80 00000080         
   81 00000080         
   82 00000080 4770            BX               LR
   83 00000082         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   84 00000082         
   85 00000082         ; -----------------------LCD _OutFix--------------------
                       --
   86 00000082         ; Output characters to LCD display in fixed-point format
                       
   87 00000082         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   88 00000082         ; Inputs:  R0 is an unsigned 32-bit number
   89 00000082         ; Outputs: none
   90 00000082         ; E.g., R0=0,    then output "0.000 "
   91 00000082         ;       R0=3,    then output "0.003 "
   92 00000082         ;       R0=89,   then output "0.089 "
   93 00000082         ;       R0=123,  then output "0.123 "
   94 00000082         ;       R0=9999, then output "9.999 "
   95 00000082         ;       R0>9999, then output "*.*** "



ARM Macro Assembler    Page 3 


   96 00000082         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   97 00000082         LCD_OutFix
   98 00000082         
   99 00000082 F84D BD04       PUSH             {R11}
  100 00000086 46EB            MOV              R11,SP
  101 00000088 B081            ADD              SP,#NumTen
  102 0000008A         
  103 0000008A E92D 0FF0       PUSH             {R4-R11}
  104 0000008E F04F 070A       MOV              R7, #10
  105 00000092 F84B 7C04       STR              R7,[R11,#NumTen]
  106 00000096 F44F 797A       MOV              R9, #1000   ;THOUSANDTHS
  107 0000009A F04F 0864       MOV              R8, #100    ;HUNDRETHS
  108 0000009E FBB0 F1F8       UDIV             R1, R0, R8
  109 000000A2 FBB1 F1F8       UDIV             R1, R1, R8
  110 000000A6 2900            CMP              R1, #0
  111 000000A8 D145            BNE              loopF1      ;VALUE TOO BIG
  112 000000AA 4604            MOV              R4, R0
  113 000000AC         
  114 000000AC         
  115 000000AC         ;MAKING INTO NUMBERS
  116 000000AC         
  117 000000AC FBB4 F2F9       UDIV             R2, R4, R9
  118 000000B0 FB02 FA09       MUL              R10, R2, R9
  119 000000B4 EBA4 0A0A       SUB              R10, R4, R10
  120 000000B8 4610            MOV              R0, R2
  121 000000BA F100 0030       ADD              R0, #0x30
  122 000000BE B500            PUSH             {LR}
  123 000000C0 F7FF FFFE       BL               ST7735_OutChar 
                                                            ;OUTPUTS FIRST NUM
  124 000000C4 F85D EB04       POP              {LR}
  125 000000C8 F04F 002E       MOV              R0, #0x2E
  126 000000CC B500            PUSH             {LR}
  127 000000CE F7FF FFFE       BL               ST7735_OutChar ;OUTPUTS DECIMAL
                                                            
  128 000000D2 F85D EB04       POP              {LR}
  129 000000D6         
  130 000000D6 FBB9 F9F7       UDIV             R9, R7
  131 000000DA 4654            MOV              R4, R10
  132 000000DC FBB4 F2F9       UDIV             R2, R4, R9
  133 000000E0 FB02 FA09       MUL              R10, R2, R9
  134 000000E4 EBA4 0A0A       SUB              R10, R4, R10
  135 000000E8 4610            MOV              R0, R2
  136 000000EA F100 0030       ADD              R0, #0x30
  137 000000EE B500            PUSH             {LR}
  138 000000F0 F7FF FFFE       BL               ST7735_OutChar ;OUTPUTS SECOND 
                                                            NUM     
  139 000000F4 F85D EB04       POP              {LR}
  140 000000F8         
  141 000000F8 FBB9 F9F7       UDIV             R9, R7
  142 000000FC 4654            MOV              R4, R10
  143 000000FE FBB4 F2F9       UDIV             R2, R4, R9
  144 00000102 FB02 FA09       MUL              R10, R2, R9
  145 00000106 EBA4 0A0A       SUB              R10, R4, R10
  146 0000010A 4610            MOV              R0, R2
  147 0000010C F100 0030       ADD              R0, #0x30
  148 00000110 B500            PUSH             {LR}
  149 00000112 F7FF FFFE       BL               ST7735_OutChar 
                                                            ;OUTPUTS THIRD NUM



ARM Macro Assembler    Page 4 


  150 00000116 F85D EB04       POP              {LR}
  151 0000011A         
  152 0000011A 4650            MOV              R0, R10
  153 0000011C F100 0030       ADD              R0, #0x30
  154 00000120 B500            PUSH             {LR}
  155 00000122 F7FF FFFE       BL               ST7735_OutChar 
                                                            ;OUTPUTS FOURTH NUM
                                                            
  156 00000126 F85D EB04       POP              {LR}
  157 0000012A E8BD 0FF0       POP              {R4-R11}
  158 0000012E         
  159 0000012E 46DD            MOV              SP,R11
  160 00000130 F85D BB04       POP              {R11}
  161 00000134 4770            BX               LR
  162 00000136         
  163 00000136         
  164 00000136         ; TOO BIG OUTPUT BELOW  
  165 00000136         
  166 00000136         
  167 00000136 F04F 002A 
                       loopF1  MOV              R0, #0x2A   ;STAR
  168 0000013A B500            PUSH             {LR}
  169 0000013C F7FF FFFE       BL               ST7735_OutChar
  170 00000140 F85D EB04       POP              {LR}
  171 00000144 F04F 002E       MOV              R0, #0x2E   ;DECIMAL
  172 00000148 B500            PUSH             {LR}
  173 0000014A F7FF FFFE       BL               ST7735_OutChar
  174 0000014E F85D EB04       POP              {LR}
  175 00000152 F04F 002A       MOV              R0, #0x2A   ;STAR
  176 00000156 B500            PUSH             {LR}
  177 00000158 F7FF FFFE       BL               ST7735_OutChar
  178 0000015C F85D EB04       POP              {LR}
  179 00000160 F04F 002A       MOV              R0, #0x2A   ;STAR
  180 00000164 B500            PUSH             {LR}
  181 00000166 F7FF FFFE       BL               ST7735_OutChar
  182 0000016A F85D EB04       POP              {LR}
  183 0000016E F04F 002A       MOV              R0, #0x2A   ;STAR
  184 00000172 B500            PUSH             {LR}
  185 00000174 F7FF FFFE       BL               ST7735_OutChar
  186 00000178 F85D EB04       POP              {LR}
  187 0000017C E8BD 0FF0       POP              {R4-R11}
  188 00000180         
  189 00000180 4770            BX               LR
  190 00000182         
  191 00000182 00 00           ALIGN
  192 00000184         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  193 00000184         
  194 00000184                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  195 00000184                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 21 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 31 in file Print.s
   Uses
      At line 17 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000082

Symbol: LCD_OutFix
   Definitions
      At line 97 in file Print.s
   Uses
      At line 18 in file Print.s
Comment: LCD_OutFix used once
loopD1 00000018

Symbol: loopD1
   Definitions
      At line 43 in file Print.s
   Uses
      At line 46 in file Print.s
Comment: loopD1 used once
loopD2 00000044

Symbol: loopD2
   Definitions
      At line 58 in file Print.s
   Uses
      At line 61 in file Print.s
Comment: loopD2 used once
loopD3 00000050

Symbol: loopD3
   Definitions
      At line 62 in file Print.s
   Uses
      At line 59 in file Print.s
      At line 73 in file Print.s

loopD4 00000042

Symbol: loopD4
   Definitions
      At line 57 in file Print.s
   Uses
      At line 49 in file Print.s
Comment: loopD4 used once
loopF1 00000136




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: loopF1
   Definitions
      At line 167 in file Print.s
   Uses
      At line 111 in file Print.s
Comment: loopF1 used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Counter FFFFFFFC

Symbol: Counter
   Definitions
      At line 11 in file Print.s
   Uses
      At line 34 in file Print.s
      At line 47 in file Print.s

NumTen FFFFFFFC

Symbol: NumTen
   Definitions
      At line 12 in file Print.s
   Uses
      At line 101 in file Print.s
      At line 105 in file Print.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 15 in file Print.s
   Uses
      At line 52 in file Print.s
      At line 68 in file Print.s
      At line 123 in file Print.s
      At line 127 in file Print.s
      At line 138 in file Print.s
      At line 149 in file Print.s
      At line 155 in file Print.s
      At line 169 in file Print.s
      At line 173 in file Print.s
      At line 177 in file Print.s
      At line 181 in file Print.s
      At line 185 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 16 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 14 in file Print.s
   Uses
      None
Comment: writecommand unused
writedata 00000000

Symbol: writedata
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: writedata unused
4 symbols
345 symbols in table
